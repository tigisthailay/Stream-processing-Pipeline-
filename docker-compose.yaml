# version: "3.7"

services:
  zookeeper:
    image: zookeeper:3.6.1
    container_name: zookeeper
    expose:
      - "2181"
    volumes:
      - kafka_zookeeper:/opt/zookeeper-3.6.1/data
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      kafkanet:
        ipv4_address: 172.25.0.11

  kafka1:
    image: wurstmeister/kafka:2.12-2.2.0
    container_name: kafkaa
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 172.25.0.11:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://172.25.0.12:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    volumes:
      - kafka_kafka1:/opt/kafka_2.12-2.2.0/logs
    networks:
      kafkanet:
        ipv4_address: 172.25.0.12
    depends_on:
      - zookeeper

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    hostname: kafka-ui
    container_name: kafka-ui
    depends_on:
      - kafka1
    ports:
      - "8083:8080" # Map the Kafka UI to localhost:8083
    environment:
      KAFKA_CLUSTERS_0_NAME: "local-cluster"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "172.25.0.12:9092"
      KAFKA_CLUSTERS_0_ZOOKEEPER: "172.25.0.11:2181" # Optional if using Zookeeper
    networks:
      kafkanet:
        ipv4_address: 172.25.0.14

  finnhubproducer:
    build:
      context: ./Finnhub_Producer
      dockerfile: Dockerfile
    container_name: Finnhubproducer
    # restart: always
    env_file:
      - .env
    environment:
      FINNHUB_TOKEN: ${FINNHUB_TOKEN}
    networks:
      - kafkanet
    depends_on:
      - kafka1
  
  stream-processing:
    build:
      context: ./stream_processing
      dockerfile: Dockerfile
    container_name: stream-processing
    # restart: always
    env_file:
      - .env
    networks:
      - kafkanet
    depends_on:
      - kafka1

networks:
  kafkanet:
    name: kafkanet
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.25.0.0/16

volumes:
  kafka_zookeeper:
  kafka_kafka1:
  
